@startuml
class WebSocketServer {
+ {static} Map<String,Session> sessionMap
+ void onOpen(Session,String)
+ void onClose(Session,String)
+ void onMessage(String,Session,String)
+ void onError(Session,Throwable)
}


class Base64Utils {
+ {static} String convertToBase64(MultipartFile)
}

class CommonResult {
+ long getCode()
+ void setCode(long)
+ String getMessage()
+ void setMessage(String)
+ T getData()
+ void setData(T)
+ {static} CommonResult<T> success(T)
+ {static} CommonResult<T> success(T,String)
+ {static} CommonResult<T> failed(IErrorCode)
+ {static} CommonResult<T> failed(String)
+ {static} CommonResult<T> failed()
+ {static} CommonResult<T> validateFailed()
+ {static} CommonResult<T> validateFailed(String)
+ {static} CommonResult<T> unauthorized(T)
+ {static} CommonResult<T> forbidden(T)
}

class TokenUtil {
+ {static} String sign(Users)
+ {static} boolean verify(String)
}

interface BannerService {
}
class CommentChildrenCommentReply {
+ List<CommentReply> children
}

class RootBusinessManageController {
+ CommonResult merchantsShow(Integer,Integer)
+ CommonResult shopShow(Integer,Integer)
+ CommonResult recruitmentShow()
+ CommonResult merchantsSearchByName(Integer,Integer,String)
+ CommonResult shopSearchByName(Integer,Integer,String)
+ CommonResult merchantsEditById(Users)
+ CommonResult identityPassById(Integer,Integer)
+ CommonResult merchantsDeleteById(Integer)
+ CommonResult shopEditById(BusinessShopAllInfoVo)
+ CommonResult shopDeleteById(Integer)
+ CommonResult delNotesByNid(Integer)
+ CommonResult getAllRecAndComment()
+ CommonResult identityPassShop(Integer,Integer)
}

class ResultObj {
+ {static} ResultObj LOGIN_SUCCESS
+ {static} ResultObj LOGIN_FAIL_PASS
+ {static} ResultObj LOGIN_FAIL_CODE
+ {static} ResultObj THE_USER_ALREADY_EXISTS
+ {static} ResultObj ADD_SUCCESS
+ {static} ResultObj ADD_ERROR
+ {static} ResultObj DELETE_SUCCESS
+ {static} ResultObj DELETE_FAIL
+ {static} ResultObj UPDATE_SUCCESS
+ {static} ResultObj UPDATE_FAIL
+ {static} ResultObj ILLEGAL_MOBILE_NUMBER
+ {static} ResultObj RESET_SUCCESS
+ {static} ResultObj RESET_FAIL
+ {static} ResultObj DISPATCH_SUCCESS
+ {static} ResultObj DISPATCH_FAIL
+ {static} ResultObj BACKINPORT_SUCCESS
+ {static} ResultObj BACKINPORT_FAIL
+ {static} ResultObj SYNCCACHE_SUCCESS
+ {static} ResultObj DELETE_FAIL_NEWS
+ {static} ResultObj DELETE_QUERY
}

class TokenInterceptor {
+ boolean preHandle(HttpServletRequest,HttpServletResponse,Object)
}

class Recruitment {
}
class NotesManage {
}
class ReturnCode {
+ {static} String SUCCESS
+ {static} String FAIL
+ {static} String UNAUTHORIZED
+ {static} String NOT_FOUND
+ {static} String INTERNAL_SERVER_ERROR
+ {static} String DEFAULT_IMG_USER
}

class RecruitmentAndSResumeChildrenVo {
}
class BusinessShopAllInfoVo {
}
class StudentController {
+ CommonResult getRec()
+ CommonResult getRecInfoByid(Integer)
+ CommonResult searchRecInfo(String)
+ CommonResult AddRecHeat(Integer)
+ CommonResult getTop()
+ CommonResult getInfo(Integer)
+ CommonResult stuEditImg(Users)
+ CommonResult stuEditPassword(EditPasswordVo)
+ CommonResult upload(Integer,MultipartFile)
+ CommonResult getNotes(Integer)
+ CommonResult download(String,HttpServletResponse)
+ CommonResult delNotes(Integer,String)
+ CommonResult sendNotes(NotesManage)
+ CommonResult commentShowByRecId(Integer)
+ CommonResult addComment(Comment)
+ CommonResult addCommentReply(CommentReply)
+ CommonResult delComment(Integer)
+ CommonResult delCommentReply(Integer)
+ CommonResult getMyDeliver(Integer)
}

class RecruitmentAndBanner {
}
interface SResumeService {
}
interface NotesManageMapper {
}
class UUIDUtils {
+ {static} String getUUID()
+ {static} void main(String[])
}

class RecruitmentServiceImpl {
+ List<RecruitmentAllInfoVo> getRecruitmentAndInfoById(Integer,Integer)
+ List<Recruitment> getRecruitmentById(Integer)
+ List<ShopAndRecruitmentVo> getShopAndRecruitmentInfoByBid(Integer)
+ RecruitmentAllInfoVo getUserAllShopRecruitmentInfoByRid(Integer)
+ List<RecruitmentAllInfoVo> getUserAllInfo()
+ List<RecruitmentAllInfoVo> getUserAllInfoSearch(String)
}

class NotesManageServiceImpl {
+ List<RecruitmentAndSonNotesManageVo> getNotesManageDistinctBossId(Integer)
+ Integer getMyNotesCount(Integer,Integer)
}

class Comment {
}
class PowerServiceImpl {
}
interface IErrorCode {
}
class RootStudentManageController {
+ CommonResult stuShow(Integer,Integer)
+ CommonResult stuEditById(Users)
+ CommonResult stuDeleteById(Users)
+ CommonResult identityPassById(Integer,Integer)
+ CommonResult stuSearchByName(Integer,Integer,String)
+ CommonResult sResumeManage()
}

class CommentReplyServiceImpl {
}
class WebConfiguration {
+ void addCorsMappings(CorsRegistry)
+ void configureAsyncSupport(AsyncSupportConfigurer)
+ void addInterceptors(InterceptorRegistry)
}

class EditPasswordVo {
}
class RecruitmentManageController {
+ CommonResult shopRecruitmentShow(Integer)
+ CommonResult addRecruitment(Recruitment)
+ CommonResult editRecruitment(Recruitment)
+ CommonResult delRecruitmentShow(Integer)
+ CommonResult RecruitmentPosterExist(Integer)
+ CommonResult RecruitmentPoster(Banner)
+ CommonResult getMyAllNotes(Integer)
}

class TopServiceImpl {
}
interface RecruitmentMapper {
}
enum ResultCode {
+  SUCCESS
+  FAILED
+  VALIDATE_FAILED
+  UNAUTHORIZED
+  FORBIDDEN
+ long getCode()
+ String getMessage()
}


interface UserService {
}
class RecruitmentAndSonNotesManageVo {
}
interface TopMapper {
}
class ShopAndRecruitmentVo {
}
interface CommentService {
}
class UserServiceImpl {
+ IPage<Users> selectUserByGender(Page<Users>,String)
+ IPage<Users> pageByGender(Page<Users>,QueryWrapper<Users>)
}

class OutputObject {
+ String toString()
}

class CommentAndChildrenVo {
}
class CommentServiceImpl {
+ List<CommentAndChildrenVo> getCommentByRid(Integer)
+ List<CommentReplyAndUserInfoVo> getCommentReplyByCid(Integer)
+ List<CommentChildrenCommentReply> getAllCommentAndReply()
}

class RecruitmentAllInfoVo {
}
class SResumeAndUserVo {
}
interface BusinessShopService {
}
class BusinessShop {
}
interface RecruitmentService {
}
class Top {
}
interface CommentReplyMapper {
}
class BusinessManageController {
+ CommonResult shopShow(Integer)
+ CommonResult shopAdd(BusinessShop)
+ CommonResult shopEdit(BusinessShop)
+ CommonResult shopDelete(Integer)
+ CommonResult changeState(Integer)
+ CommonResult changeNotesInfoAndState(NotesManage)
}

class BusinessShopServiceImpl {
+ List<BusinessShopAllInfoVo> getBusinessShopInfoById(Integer)
+ IPage<BusinessShopAllInfoVo> getBusinessShopInfoByLikeName(Page<BusinessShopAllInfoVo>,String)
+ IPage<BusinessShopAllInfoVo> getBusinessShopIdentity(Page<BusinessShopAllInfoVo>,QueryWrapper<BusinessShopAllInfoVo>)
+ IPage<BusinessShopAllInfoVo> getBusinessShopInfo(Page<BusinessShopAllInfoVo>)
}

class SResume {
}
interface CommentMapper {
}
interface BannerMapper {
}
interface SResumeMapper {
}
class Power {
}
class Banner {
}
class RecruitmentChildrenVo {
}
class UsersController {
+ CommonResult login(Users)
+ CommonResult addUser(Users)
}

class WebSocketConfig {
+ ServerEndpointExporter serverEndpointExporter()
}

class UserAndNotesVo {
}
class CommentReply {
}
interface TopService {
}
interface NotesManageService {
}
class MybatisPlusConfig {
+ MybatisPlusInterceptor mybatisPlusInterceptor()
}

interface UserMapper {
}
class SResumeAndNid {
}
interface PowerService {
}
interface BusinessShopMapper {
}
class CommentReplyAndUserInfoVo {
}
interface CommentReplyService {
}
class BannerServiceImpl {
+ List<Banner> getBannerTopList()
}

class MD5Utils {
+ {static} String md5(String)
+ {static} String md5Minus(String)
+ {static} void main(String[])
}

class Users {
}
class BootAdjunctApplication {
+ {static} void main(String[])
}

class SResumeServiceImpl {
+ Integer getNotesConstById(Integer)
+ List<SResumeAndUserVo> getStuNotesAndUserInfo()
+ List<SResumeAndNid> getAllNotesByTid(Integer,Integer)
+ SResumeAndNid getOneTid(Integer)
}



IService <|-- BannerService
HandlerInterceptor <|.. TokenInterceptor
Serializable <|.. Recruitment
Serializable <|.. NotesManage
Serializable <|.. BusinessShopAllInfoVo
IService <|-- SResumeService
BaseMapper <|-- NotesManageMapper
RecruitmentService <|.. RecruitmentServiceImpl
ServiceImpl <|-- RecruitmentServiceImpl
NotesManageService <|.. NotesManageServiceImpl
ServiceImpl <|-- NotesManageServiceImpl
Serializable <|.. Comment
PowerService <|.. PowerServiceImpl
CommentReplyService <|.. CommentReplyServiceImpl
ServiceImpl <|-- CommentReplyServiceImpl
WebMvcConfigurer <|.. WebConfiguration
TopService <|.. TopServiceImpl
ServiceImpl <|-- TopServiceImpl
BaseMapper <|-- RecruitmentMapper
IService <|-- UserService
BaseMapper <|-- TopMapper
IService <|-- CommentService
UserService <|.. UserServiceImpl
ServiceImpl <|-- UserServiceImpl
Serializable <|.. OutputObject
CommentService <|.. CommentServiceImpl
ServiceImpl <|-- CommentServiceImpl
IService <|-- BusinessShopService
Serializable <|.. BusinessShop
IService <|-- RecruitmentService
Serializable <|.. Top
BaseMapper <|-- CommentReplyMapper
BusinessShopService <|.. BusinessShopServiceImpl
ServiceImpl <|-- BusinessShopServiceImpl
Serializable <|.. SResume
BaseMapper <|-- CommentMapper
BaseMapper <|-- BannerMapper
BaseMapper <|-- SResumeMapper
Serializable <|.. Banner
Serializable <|.. CommentReply
IService <|-- TopService
IService <|-- NotesManageService
BaseMapper <|-- UserMapper
BaseMapper <|-- BusinessShopMapper
IService <|-- CommentReplyService
BannerService <|.. BannerServiceImpl
ServiceImpl <|-- BannerServiceImpl
Serializable <|.. Users
SResumeService <|.. SResumeServiceImpl
ServiceImpl <|-- SResumeServiceImpl
@enduml